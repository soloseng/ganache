declare function _exports({ ipld, preload }: {
    ipld: import('.').IPLD;
    preload: import('.').Preload;
}): (ipfsPath: string | import("cids/src/"), options?: (ResolveOptions & import("../../utils").AbortOptions) | undefined) => Promise<ResolveResult>;
export = _exports;
export type ResolveOptions = {
    /**
     * - If `ipfsPath` is a `CID`, you may pass a path here
     */
    path?: string | undefined;
    preload?: boolean | undefined;
};
export type ResolveResult = {
    /**
     * - The last CID encountered during the traversal
     */
    cid: import("cids/src/");
    /**
     * - The path to the end of the IPFS path
     * inside the node referenced by the CID
     */
    remainderPath: string;
};
export type AbortOptions = {
    /**
     * - A timeout in ms
     */
    timeout?: number | undefined;
    /**
     * - Can be used to cancel any long running requests started as a result of this call
     */
    signal?: AbortSignal | undefined;
};
//# sourceMappingURL=resolve.d.ts.map