declare function _exports({ network }: {
    network: import('.').NetworkService;
}): (options?: (PeersOptions & import("../../utils").AbortOptions) | undefined) => Promise<PeerConnection[]>;
export = _exports;
export type PeerConnection = {
    addr: Multiaddr;
    peer: string;
    latency?: string | undefined;
    muxer?: string | undefined;
    direction?: number | undefined;
};
export type PeersOptions = {
    direction?: boolean | undefined;
    streams?: boolean | undefined;
    verbose?: boolean | undefined;
    v?: boolean | undefined;
    latency?: boolean | undefined;
};
export type Multiaddr = import("multiaddr");
export type AbortOptions = {
    /**
     * - A timeout in ms
     */
    timeout?: number | undefined;
    /**
     * - Can be used to cancel any long running requests started as a result of this call
     */
    signal?: AbortSignal | undefined;
};
//# sourceMappingURL=peers.d.ts.map